import React, { useEffect, useState } from 'react';
import styled from 'styled-components';
import MaterialTable from 'material-table';
import LogoImg from '../../../assets/logo/Technology to Customize Your Design _ GraphicSprings - Brave 20-Jun-21 11_44_14 AM.png';

const ReportWrapper = styled.div`
    width: 100vw;
    padding: 20px;
    display: flex;
    flex-direction: column;

`;

const LogoWrapper = styled.div`
    height: 110px;
    width: fit-content;
    display: flex;
    align-items: center;
    margin-left: 40px;
    /* background-color: red; */

    img {
        height: 100%;
        /* width: fit-content; */
        flex-grow: 1;
        border-radius: 1rem;
    }

    h1 {
        height: auto;
        margin-left: 5px;
        font-size: 40px;
        color: #006DB6;
    }
`;

const TextContainer = styled.div`
    display: flex;
    flex-direction: column;
    align-items: center;
    /* background-color: #b81212; */

    h2 {
        margin-bottom: 0;
    }
`;

export function PatientReport(props) {
    const [patientDetails, setPatientDetails] = useState([]);


    const getPatientDetails = async () => {
        let response= await fetch("http://localhost:8080/healthgram/test.php",{
            method:"POST",
            header:{"Content-Type": "application/json"},
            body:JSON.stringify({"query":`SELECT * FROM healthgram.tbl_patient patient JOIN  healthgram.tbl_userbase userbase On userbase.Username = patient.Username;`})
        });
        let table = await response.json();
        setPatientDetails(table);
    }

    useEffect(() => {
        getPatientDetails()
        setTimeout(() => { 
            window.print()
        }, 1000);
    }, [])

    return <ReportWrapper>
    <LogoWrapper>
        <img src={LogoImg} alt=""/>
        <h1>HealthGram</h1>
    </LogoWrapper>
    <TextContainer>
        <h2>Report Type: Patient Report</h2>
        <h2>{`Generated by: ${sessionStorage.getItem('Username')}`}</h2>
        <h2>{`Timestamp: ${new Date()}`}</h2>
    </TextContainer>
    <MaterialTable
        title="Patient Details"
        data={patientDetails}
        columns={[
            { title: "Patient ID", field: "Pat_Id" },
            { title: "Status", field: "User_Status", lookup: {'verified': 'ðŸŸ¢ verified', 'not verified': 'ðŸŸ¡ not verified', 'inactive': 'â›” inactive'}},
            { title: "Email", field: "Username" },
            { title: "Name", field: "Pat_Name" },
            { title: "Phone Number", field: 'Pat_Phone_No', },
            { title: "DOB", field: "Pat_Dob", },
            { title: "Registerd on", field: 'Pat_Date_Registered', },
            { title: "Gender", field: "Pat_Gender", },
            { title: "House Number", field: 'Pat_House_No', },
            { title: "Street", field: 'Pat_Street', },
            { title: "District", field: "Pat_Dist", },
            { title: "Pin Code", field: 'Pat_Pin', },
        ]}
        options={{
            actionsColumnIndex: 0, addRowPosition: "first",
            search: false,  
            paging: false
        }} 
        editable={{                    
            isEditable: row=> row.Doc_Id==1
        }} 
        style={{
            height: 'auto',
            width: '1490px',
            display: 'flex',
            boxShadow: 'rgba(136, 165, 191, 0.48) 6px 2px 16px 0px, rgba(255, 255, 255, 0.8) -6px -2px 16px 0px',
            flexDirection: 'column',
            marginTop: '20px',
            borderRadius: '1rem',    
            marginBottom: '0px'
            // backgroundColor: 'transparent'
        }}
    />
    </ReportWrapper>
};